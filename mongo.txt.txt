Microsoft Windows [Version 10.0.19045.5737]
(c) Microsoft Corporation. All rights reserved.

C:\Users\MLM>mongosh
Current Mongosh Log ID: 67fe35aa2bb46e7ab2b5f898
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.0
Using MongoDB:          8.0.6
Using Mongosh:          2.5.0

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-04-15T15:59:49.190+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use studrnt
switched to db studrnt
studrnt>  db.student.insertMany([{rollno:1,name:"Amit",department:"MCA",semester:2,cgpa:8.1},{rollno:2,name:"Neha",department:"MCA",semester:2,cgpa:8.5},{rollno:3,name:"Raj",department:"BCA",semester:4,cgpa:7.5},{rollno:4,name:"Sara",department:"MCA",semester:2,cgpa:8.9},{rollno:5,name:"Tom",department:"MBA",semester:1,cgpa:7.8},{rollno:6,name:"Ankit",department:"MCA",semester:3,cgpa:7.9},{rollno:7,name:"Priya",department:"MBA",semester:2,cgpa:8.4},{rollno:8,name:"John",department:"BCA",semester:5,cgpa:6.9},{rollno:9,name:"Divya",department:"MCA",semester:3,cgpa:9.0},{rollno:10,name:"Karan",department:"MCA",semester:2,cgpa:8.3}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('680751432bb46e7ab2b5f899'),
    '1': ObjectId('680751432bb46e7ab2b5f89a'),
    '2': ObjectId('680751432bb46e7ab2b5f89b'),
    '3': ObjectId('680751432bb46e7ab2b5f89c'),
    '4': ObjectId('680751432bb46e7ab2b5f89d'),
    '5': ObjectId('680751432bb46e7ab2b5f89e'),
    '6': ObjectId('680751432bb46e7ab2b5f89f'),
    '7': ObjectId('680751432bb46e7ab2b5f8a0'),
    '8': ObjectId('680751432bb46e7ab2b5f8a1'),
    '9': ObjectId('680751432bb46e7ab2b5f8a2')
  }
}
studrnt> db.student.find({department:"MCA"})

[
  {
    _id: ObjectId('680751432bb46e7ab2b5f899'),
    rollno: 1,
    name: 'Amit',
    department: 'MCA',
    semester: 2,
    cgpa: 8.1
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89a'),
    rollno: 2,
    name: 'Neha',
    department: 'MCA',
    semester: 2,
    cgpa: 8.5
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89c'),
    rollno: 4,
    name: 'Sara',
    department: 'MCA',
    semester: 2,
    cgpa: 8.9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89e'),
    rollno: 6,
    name: 'Ankit',
    department: 'MCA',
    semester: 3,
    cgpa: 7.9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f8a1'),
    rollno: 9,
    name: 'Divya',
    department: 'MCA',
    semester: 3,
    cgpa: 9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f8a2'),
    rollno: 10,
    name: 'Karan',
    department: 'MCA',
    semester: 2,
    cgpa: 8.3
  }
]
studrnt>

studrnt> db.student.updateMany({department:"MCA"},{$set:{semester:1}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 6,
  modifiedCount: 6,
  upsertedCount: 0
}
studrnt> db.student.find()
[
  {
    _id: ObjectId('680751432bb46e7ab2b5f899'),
    rollno: 1,
    name: 'Amit',
    department: 'MCA',
    semester: 1,
    cgpa: 8.1
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89a'),
    rollno: 2,
    name: 'Neha',
    department: 'MCA',
    semester: 1,
    cgpa: 8.5
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89b'),
    rollno: 3,
    name: 'Raj',
    department: 'BCA',
    semester: 4,
    cgpa: 7.5
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89c'),
    rollno: 4,
    name: 'Sara',
    department: 'MCA',
    semester: 1,
    cgpa: 8.9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89d'),
    rollno: 5,
    name: 'Tom',
    department: 'MBA',
    semester: 1,
    cgpa: 7.8
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89e'),
    rollno: 6,
    name: 'Ankit',
    department: 'MCA',
    semester: 1,
    cgpa: 7.9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f89f'),
    rollno: 7,
    name: 'Priya',
    department: 'MBA',
    semester: 2,
    cgpa: 8.4
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f8a0'),
    rollno: 8,
    name: 'John',
    department: 'BCA',
    semester: 5,
    cgpa: 6.9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f8a1'),
    rollno: 9,
    name: 'Divya',
    department: 'MCA',
    semester: 1,
    cgpa: 9
  },
  {
    _id: ObjectId('680751432bb46e7ab2b5f8a2'),
    rollno: 10,
    name: 'Karan',
    department: 'MCA',
    semester: 1,
    cgpa: 8.3
  }
]
studrnt> use inventory
switched to db inventory
inventory> db.products.insertMany([
... ...   { "_id" : 1, "name" : "Phone", "price" : 799, "releaseDate": ISODate("2011-05-24"),
... ...     "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66},
Uncaught:
SyntaxError: Unexpected token, expected "," (3:15)

  1 | db.products.insertMany([
  2 | ...   { "_id" : 1, "name" : "Phone", "price" : 799, "releaseDate": ISODate("2011-05-24"),
> 3 | ...     "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66},
    |                ^
  4 |

inventory> ...     "color":["white","black"], "storage":[64,128,256] },
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...     "color":["white","black"], "storage":[64,128,256] },
    | ^
  2 |

inventory> ...
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...
    | ^
  2 |

inventory> ...   { "_id" : 2, "name" : "Tablet", "price" : 799, "releaseDate": ISODate("2011-09-01"),
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...   { "_id" : 2, "name" : "Tablet", "price" : 799, "releaseDate": ISODate("2011-09-01"),
    | ^
  2 |

inventory> ...     "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66},
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...     "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66},
    | ^
  2 |

inventory> ...     "color":["white","black","purple"], "storage":[128,256,512] },
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...     "color":["white","black","purple"], "storage":[128,256,512] },
    | ^
  2 |

inventory> ...
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...
    | ^
  2 |

inventory> ...   { "_id" : 3, "name" : "SmartPhone", "price" : 899, "releaseDate": ISODate("2022-01-14"),
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...   { "_id" : 3, "name" : "SmartPhone", "price" : 899, "releaseDate": ISODate("2022-01-14"),
    | ^
  2 |

inventory> ...     "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 1.66},
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...     "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 1.66},
    | ^
  2 |

inventory> ...     "color":["blue"], "storage":[16,64,128] }
Uncaught:
SyntaxError: Unexpected token (1:0)

> 1 | ...     "color":["blue"], "storage":[16,64,128] }
    | ^
  2 |

inventory> db.products.insertMany([{ "_id" : 1, "name" : "Phone", "price" : 799, "releaseDate": ISODate("2011-05-24"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66}, "color":["white","black"], "storage":[64,128,256] }, { "_id" : 2, "name" : "Tablet", "price" : 799, "releaseDate": ISODate("2011-09-01"),"spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66},"color":["white","black","purple"], "storage":[128,256,512] },{ "_id" : 3, "name" : "SmartPhone", "price" : 899, "releaseDate": ISODate("2022-01-14"),"spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 1.66},"color":["blue"], "storage":[16,64,128] }
... ])
{ acknowledged: true, insertedIds: { '0': 1, '1': 2, '2': 3 } }
inventory> db.products.find()
[
  {
    _id: ObjectId('67f50e7d482bccd5edb5f8a4'),
    id: 2,
    name: 'Smartphone',
    price: 700,
    releasedate: ISODate('2024-01-10T00:00:00.000Z'),
    spec: 'Snapdragon 888, 8GB RAM, 128GB storage',
    color: 'Black',
    storage: '128GB'
  },
  {
    _id: ObjectId('67f50e7d482bccd5edb5f8a5'),
    id: 3,
    name: 'Tablet',
    price: 400,
    releasedate: ISODate('2023-08-25T00:00:00.000Z'),
    spec: 'A12 Bionic, 4GB RAM, 64GB storage',
    color: 'Gold',
    storage: '64GB'
  },
  {
    _id: 1,
    name: 'Phone',
    price: 799,
inventory> db.products.find({_id:3})
[   spec: { ram: 4, screen: 6.5, cpu: 2.66 },
  { color: [ 'white', 'black' ],
    _id: 3,: [ 64, 128, 256 ]
    name: 'SmartPhone',
    price: 899,
    releaseDate: ISODate('2022-01-14T00:00:00.000Z'),
    spec: { ram: 12, screen: 9.7, cpu: 1.66 },
    color: [ 'blue' ],
    storage: [ 16, 64, 128 ]11-09-01T00:00:00.000Z'),
  } spec: { ram: 16, screen: 9.5, cpu: 3.66 },
]   color: [ 'white', 'black', 'purple' ],
inventory>  db.products.findOne()
{ },
  _id: ObjectId('67f50e7d482bccd5edb5f8a4'),
  id: 2, 3,
  name: 'Smartphone',',
  price: 700,9,
  releasedate: ISODate('2024-01-10T00:00:00.000Z'),),
  spec: 'Snapdragon 888, 8GB RAM, 128GB storage',
  color: 'Black',e' ],
  storage: '128GB' 64, 128 ]
} }
inventory>  db.products.find({_id:2},{name:1,price:1,_id:0})
[ { name: 'Tablet', price: 799 } ]})
inventory>  db.products.find({price:{$ed:799}})
MongoServerError[BadValue]: unknown operator: $ed
inventory>  db.products.find({price:{$eq:799}})
[   name: 'SmartPhone',
  { price: 899,
    _id: 1,Date: ISODate('2022-01-14T00:00:00.000Z'),
    name: 'Phone',2, screen: 9.7, cpu: 1.66 },
    price: 799,lue' ],
    releaseDate: ISODate('2011-05-24T00:00:00.000Z'),
    spec: { ram: 4, screen: 6.5, cpu: 2.66 },
    color: [ 'white', 'black' ],
    storage: [ 64, 128, 256 ]
  },
  {
    _id: 2,
    name: 'Tablet',
    price: 799,
    releaseDate: ISODate('2011-09-01T00:00:00.000Z'),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  }
]
inventory> db.products.deleteOne({_id:1})
{ acknowledged: true, deletedCount: 1 }
inventory>